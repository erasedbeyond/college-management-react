[{"/home/shivendra/Documents/Projects/college-management/client/src/index.js":"1","/home/shivendra/Documents/Projects/college-management/client/src/components/App.js":"2","/home/shivendra/Documents/Projects/college-management/client/src/components/Header.js":"3","/home/shivendra/Documents/Projects/college-management/client/src/components/Footer.js":"4","/home/shivendra/Documents/Projects/college-management/client/src/components/Login.js":"5","/home/shivendra/Documents/Projects/college-management/client/src/components/Profile.js":"6","/home/shivendra/Documents/Projects/college-management/client/src/components/TeacherSignUp.js":"7","/home/shivendra/Documents/Projects/college-management/client/src/components/StudentSignUp.js":"8","/home/shivendra/Documents/Projects/college-management/client/src/components/StudentSignIn.js":"9","/home/shivendra/Documents/Projects/college-management/client/src/components/Student.js":"10","/home/shivendra/Documents/Projects/college-management/client/src/components/TeacherSignIn.js":"11","/home/shivendra/Documents/Projects/college-management/client/src/components/Teacher.js":"12","/home/shivendra/Documents/Projects/college-management/client/src/components/StudentDashboard.js":"13","/home/shivendra/Documents/Projects/college-management/client/src/components/TeacherPost.js":"14","/home/shivendra/Documents/Projects/college-management/client/src/components/TeacherDashboard.js":"15","/home/shivendra/Documents/Projects/college-management/client/src/components/StudentSection.js":"16","/home/shivendra/Documents/Projects/college-management/client/src/assets/url.js":"17"},{"size":232,"mtime":1609352950794,"results":"18","hashOfConfig":"19"},{"size":1692,"mtime":1612087090189,"results":"20","hashOfConfig":"19"},{"size":1160,"mtime":1612087151365,"results":"21","hashOfConfig":"19"},{"size":253,"mtime":1609902621314,"results":"22","hashOfConfig":"19"},{"size":2238,"mtime":1612141507609,"results":"23","hashOfConfig":"19"},{"size":450,"mtime":1609900575392,"results":"24","hashOfConfig":"19"},{"size":3090,"mtime":1612087810237,"results":"25","hashOfConfig":"19"},{"size":4879,"mtime":1612087576426,"results":"26","hashOfConfig":"19"},{"size":1808,"mtime":1612087479385,"results":"27","hashOfConfig":"19"},{"size":394,"mtime":1609905403519,"results":"28","hashOfConfig":"19"},{"size":1657,"mtime":1612087782790,"results":"29","hashOfConfig":"19"},{"size":3360,"mtime":1612087643657,"results":"30","hashOfConfig":"19"},{"size":6909,"mtime":1612087358984,"results":"31","hashOfConfig":"19"},{"size":3098,"mtime":1612087745410,"results":"32","hashOfConfig":"19"},{"size":1735,"mtime":1612087707224,"results":"33","hashOfConfig":"19"},{"size":8391,"mtime":1612087445040,"results":"34","hashOfConfig":"19"},{"size":129,"mtime":1612104016858,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"suy7xy",{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"38"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"38"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"38"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"38"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"38"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"38"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"/home/shivendra/Documents/Projects/college-management/client/src/index.js",[],["77","78"],"/home/shivendra/Documents/Projects/college-management/client/src/components/App.js",["79"],"import React from 'react';\nimport '../css/App.css';\nimport Header from './Header';\nimport Footer from './Footer';\nimport Axios from 'axios';\nimport Login from './Login';\nimport Profile from './Profile';\nimport URL from '../assets/url'\nimport userEvent from '@testing-library/user-event';\n\n\n\n\nclass App extends React.Component {\n\n\n  constructor(){\n    super();\n    this.state={\n      logged_In:false,\n      profile:'',\n      user:'No User'\n    }\n  }\n\n  setLoginState = (login,profile,user)=>{\n    console.log(profile,':',login);\n    \n    this.setState({\n      logged_In:login,\n      profile:profile,\n      user:user\n      \n    })\n  }\n\n  componentDidMount(){\n  \n      Axios({\n          method:'GET',\n          // url:'http://localhost:8000/user/get-user',\n          // url:'https://college-management-portal-app.herokuapp.com/user/get-user',\n          url:URL+'user/get-user',\n          withCredentials:true\n      }).then((res)=>{\n        console.log(res.data)\n\n        if(res.data.status){\n          console.log(res.data)\n          this.setState({\n            logged_In:true,\n            profile:res.data.profile, // student or teacher\n            user:res.data.name\n          })\n        }\n      });\n\n  }\n\n  render(){\n    return (\n      <div className=\"app\">\n\n        <Header \n          loggedIn={this.state.logged_In} \n          user={this.state.user} \n          setLoginState={this.setLoginState}\n        />\n\n        <div className='app-main'>\n\n          {!this.state.logged_In?\n          <Login setLoginState ={this.setLoginState }/>\n          :<Profile profile={this.state.profile}/>\n          }\n        \n\n        </div>\n\n\n        <Footer/>\n\n      </div>\n    );\n  }\n}\n\nexport default App;\n","/home/shivendra/Documents/Projects/college-management/client/src/components/Header.js",["80"],"import React from 'react';\nimport '../css/Header.css';\nimport home from '../assets/home.svg'\nimport URL from '../assets/url'\n\n\n\n\n\n\nimport Axios from 'axios';\n\n\n    \n\n\n  \n\n\nclass Header extends React.Component{\n\n    \n\n   logout = ()=>{\n       Axios({\n            method:'GET',\n            // url:'http://localhost:8000/user/logout',\n            // url:'https://college-management-portal-app.herokuapp.com/user/logout',\n            url:URL+'user/logout',\n\n            withCredentials:true\n           \n       }).then((res)=>{\n           console.log(res);\n           this.setState({user:'No User'})\n           this.props.setLoginState(false,'','No User');\n       }).catch(err=>console.log(err));\n     \n   }\n\n\n\n  \n\n    render(){\n        return(\n            <div className=\"header\">\n                <img id='home' src={home} />\n                <h1>College Management Portal</h1>\n\n\n                <div className='user'>\n                    <h3>{this.props.user}</h3>\n                   \n                   { this.props.loggedIn ? <button onClick={this.logout}>Logout</button> :''}\n                </div>\n\n            </div>\n        );\n    }\n}\n\nexport default Header;","/home/shivendra/Documents/Projects/college-management/client/src/components/Footer.js",[],"/home/shivendra/Documents/Projects/college-management/client/src/components/Login.js",["81"],"/home/shivendra/Documents/Projects/college-management/client/src/components/Profile.js",["82"],"import React from 'react';\nimport Teacher from './Teacher'\nimport Student from './Student'\nimport '../css/Profile.css'\n\n\n\nclass Profile extends React.Component{\n   \n\n   \n    render(){\n        return(\n            <div className='profile'>\n\n                {this.props.profile=='teacher'?<Teacher/>:<Student/>}\n             {/* <Student/> */}\n             {/* <Teacher/> */}\n              \n            </div>\n        );\n    }\n}\n\nexport default Profile;","/home/shivendra/Documents/Projects/college-management/client/src/components/TeacherSignUp.js",[],"/home/shivendra/Documents/Projects/college-management/client/src/components/StudentSignUp.js",["83"],"import React from 'react';\nimport Axios from 'axios';\nimport URL from '../assets/url'\n\n\nclass StudentSignUp extends React.Component{\n\n    constructor(){\n        super();\n        this.state ={\n\n            all_course:[],\n\n            next:false,\n            \n            email:'',\n            name:'',\n            password:'',\n            confirm_Password:'',\n            courses:[],\n\n            signedUp:false\n        }\n    }\n\n    textToUpperCase = (e) => {\n        //To convert first letter of everyword to Upper Case\n        let str = e.target.value.toLowerCase()\n        .split(' ')\n        .map((s) => s.charAt(0).toUpperCase() + s.substring(1))\n        .join(' ');\n\n        return str;\n\n   }\n\n    handleChangeCheck = (e) =>{ //selecting courses student want to enroll in\n\n        if(this.state.courses.indexOf(e.target.value)!=-1){\n        console.log('if')\n\n            let index = this.state.courses.indexOf(e.target.value);\n            this.setState({ \n                courses: [...this.state.courses.slice(0,index), ...this.state.courses.slice(index+1)]\n              });\n        }else {\n        console.log('else')\n\n            this.setState({courses:[...this.state.courses, e.target.value]})\n        }\n\n       \n    }\n\n\n    handleNext = () =>{ //take to next form of sign up (fill courses)\n        if(this.state.next){\n            this.setState({next:false})\n        }else this.setState({next:true})\n    }\n    \n\n    //------setting up the input to the state\n    setEmail= (e) =>{\n        this.setState({\n            email:e.target.value\n        });\n    }\n    setName = (e) =>{\n\n        let str = this.textToUpperCase(e);\n        this.setState({\n            name:str\n        });\n    }\n    setPassword = (e) =>{\n        this.setState({\n            password:e.target.value\n        });\n    }\n    setConfirmPassword = (e) =>{\n        this.setState({\n            confirm_password:e.target.value\n        });\n    }\n\n    signUp = () =>{        \n        Axios({\n            method: \"POST\",\n            data: {\n              name:this.state.name,\n              email:this.state.email,\n              courses:this.state.courses,\n              password:this.state.password,\n              confirmed_password:this.state.confirm_password\n\n            },\n            // url: \"http://localhost:8000/student/create\",\n            // url: \"https://college-management-portal-app.herokuapp.com/student/create\",\n            url:URL+'student/create'\n\n          }).then((res)=>{\n              console.log(res.data);\n              if(res.data.status){\n                this.setState({signedUp:true})\n            }\n        \n        }).catch((error)=>{console.log(error)});\n          \n    }\n\n    componentDidMount(){\n\n        Axios({\n            method: \"GET\",\n            // url: \"http://localhost:8000/student/get-courses\",\n            // url: \"https://college-management-portal-app.herokuapp.com/student/get-courses\",\n            url:URL+'student/get-courses'\n\n        })\n        .then((res)=>{\n\n            res.data.map((item,index)=>(\n                this.setState({all_course:[...this.state.all_course,item.subject]})\n            ));\n            \n        \n        }).catch((error)=>{console.log(error)});\n    }\n\n    render(){\n        let input;\n        if(!this.state.next){\n            input = <form>\n                        <input type='text' name='name' placeholder='Name*' onChange={this.setName} required/>\n                        <input type='email' name='email' placeholder='Email*' onChange={this.setEmail}required/>\n                        <input type='password' name='password' placeholder='Password*' onChange={this.setPassword} required/>\n                        <input type='text' name='confirm_password' placeholder='Confirm Password*' onChange={this.setConfirmPassword} required/>\n                        <input type='button' value='next' onClick={this.handleNext}/>\n                    </form>\n        }else{\n            input = <form>\n\n                {this.state.all_course.map((item,index)=>(\n                    <label key={index}> {item}\n                        <input type=\"checkbox\"  value={item} onChange={this.handleChangeCheck} />\n                    </label>\n                ))}\n                \n\n                \n\n                <input type='button' value='prev' onClick={this.handleNext}/>\n                <input type='button' value='sign-up' onClick={this.signUp}/>\n\n\n                \n\n            </form>\n        }\n\n        return(\n            <div className=\"student-sign-up\">\n                <h3>Student Registration</h3>\n               \n                {this.state.signedUp?  <div>signed Up Succesfully</div>:  input}\n                {/* {this.state.signedUp?   {input}:  <div>signed Up Succesfully</div>} */}\n\n                     \n                     \n\n               \n\n                \n            </div>\n        );\n    }\n}\n\nexport default StudentSignUp;","/home/shivendra/Documents/Projects/college-management/client/src/components/StudentSignIn.js",[],"/home/shivendra/Documents/Projects/college-management/client/src/components/Student.js",[],"/home/shivendra/Documents/Projects/college-management/client/src/components/TeacherSignIn.js",[],"/home/shivendra/Documents/Projects/college-management/client/src/components/Teacher.js",[],"/home/shivendra/Documents/Projects/college-management/client/src/components/StudentDashboard.js",["84","85","86"],"import React from 'react';\nimport Axios from 'axios';\nimport URL from '../assets/url'\n\nimport '../css/StudentDashboard.css'\n\n\n\nclass StudentDashboard extends React.Component{\n    constructor(){\n        super();\n        this.state = {\n            name:'',\n            student_id:'',\n            subject:[],\n            assigments:[],\n            submitted:[],\n            remaining:[],\n\n\n            current_subject:'',\n\n\n            assigment_grades:{},\n            logs:[],\n\n            //uploaded assignment detail\n            document:null,\n            assigment_id:null //to match the correct  assignment is submitted\n\n        }\n    }\n\n\n    setFile = (e) => {\n        this.setState({\n            assigment_id:e.target.name,\n            document:e.target.files[0]\n        })\n    }\n    \n\n    getUser = ()=>{\n        Axios({\n            method:'GET',\n            // url:'http://localhost:8000/student/get-user',\n            // url:'https://college-management-portal-app.herokuapp.com/student/get-user',\n            url:URL+'student/get-user',\n\n            withCredentials:true\n        }).then((res)=>{\n            console.log('Student Details',res.data);\n            if(res.data.status)\n            this.setState({\n                name:res.data.user.name,\n                student_id:res.data.user._id,\n                subject:res.data.user.courses,\n                logs:res.data.user.log\n            })\n        });\n    }\n\n    componentDidMount(){\n        this.getUser();\n    }\n\n    setCurrentSubject  = (e) => {\n        let subject  = e.target.value;\n\n        this.setState({current_subject:subject},() => this.getAssignment());\n        \n    }\n\n    getAssignment = ()=>{\n        console.log('hello')\n        let subject = this.state.current_subject;\n        Axios({\n            method:'GET',\n            // url:`http://localhost:8000/student/assignments/${subject}`,\n            // url:`https://college-management-portal-app.herokuapp.com/student/assignments/${subject}`,\n            url:URL+`student/assignments${subject}`,\n\n            withCredentials:true\n        }).then(\n            (res)=>{\n                console.log('Assignment data for student',res.data);\n                this.setState({assigments:res.data},() => {\n\n                    let submitted=[];\n                    let remaining=[];\n                    this.state.assigments.forEach(assigment => {\n                        if(assigment.students.length>0 && assigment.students.indexOf(this.state.student_id)!=-1){\n                            submitted.push(assigment);\n                        }else remaining.push(assigment);\n                    });\n\n\n                    Promise.all(submitted,remaining).then(this.setState({\n                        submitted:submitted,\n                        remaining:remaining\n                    }))\n\n\n                   \n                });\n\n               \n\n            })\n        .catch((err)=>{console.log(err)});\n    }\n\n    submitAssignment= (e)=>{\n\n        // submit button should match the assignment uploaded id\n        if(this.state.document && this.state.assigment_id == e.target.value){\n\n            let data = new FormData()\n            data.append('document',this.state.document);\n            data.append('assignment_id',this.state.assigment_id);\n            console.log(this.state.document,'-------',data)\n            Axios({\n                method:'POST',\n                data,\n                headers: {\n                    'content-type': 'multipart/form-data'\n                },\n                // url:`http://localhost:8000/student/submit-assignment/?id=${e.target.value}&&student=${this.state.name}`,\n                // url:`https://college-management-portal-app.herokuapp.com/student/submit-assignment/?id=${e.target.value}&&student=${this.state.name}`,\n                url:URL+`student/submit-assignment/?id=${e.target.value}&&student=${this.state.name}`,\n\n                \n                withCredentials:true\n            })\n            .then(\n                (res)=>{\n                    console.log(res.data);\n                    if(res.data.status)\n                        this.getAssignment();\n\n                })\n            .catch((err)=>{console.log(err)}); \n        }\n    }\n\n    \n    \n\n\n    \n    render(){\n         \n\n            let obj= {}\n            this.state.logs.forEach(log => {\n                let id = log.assignment;\n                let grade = log.grade\n    \n                obj[id] = grade\n            });\n\n\n\n            return(\n            <div className='student-dashboard'>\n\n                <h1>{this.state.name}</h1>\n\n                <div className='subject'> \n                    {this.state.subject.map((subject,index)=>(\n                        <button\n                            className=\"subject-tab\" \n                            key={index} value={subject} \n                            onClick={this.setCurrentSubject}>{subject}</button>\n                        ))}\n                </div>\n\n                <h2>{this.state.current_subject}</h2>\n                {this.state.current_subject? \n                    <div className='student-assignment-section'>\n                    \n                    \n                    <div>\n                        <h2>\n                            { this.state.remaining.length===0?\"No assignmnent Remaining\":'Remaining Assignment'}\n                        </h2>\n                        \n                        <ul>\n                            {this.state.remaining.map((assigment,index)=>(<li key={index}>\n                                <p><b>Topic:</b> {assigment.topic}</p>\n                                <h3>{assigment.content}</h3>\n                            \n\n\n                                <input  name={assigment._id} type=\"file\"  onChange= {this.setFile} />\n                                <button className='submit-assignment' value={assigment._id} onClick={this.submitAssignment}>Submit Assignment</button>\n\n                            </li>))}\n                        </ul>\n                        \n                    </div>\n\n                    <div>\n                        <h2>\n                            {this.state.submitted.length===0?\"No assignmnent Submitted yet\":'Submitted Assignment'}\n                        </h2>\n                        <ul>\n                            {this.state.submitted.map((assigment,index)=>(<li key={index}>\n                            <span><b>{assigment.topic}: </b>{assigment.content} </span>\n\n                            <small className='grade'>{ typeof obj[assigment._id]==='undefined' || obj[assigment._id]==-1?' Not Reviewed':'Score: '+obj[assigment._id]}</small>\n                            </li>))}\n                        </ul>\n                        \n                    </div>\n                    \n                </div>\n                    : <p>Click on course tab</p>}\n            </div>\n        );\n    }\n}\n\nexport default StudentDashboard;","/home/shivendra/Documents/Projects/college-management/client/src/components/TeacherPost.js",[],"/home/shivendra/Documents/Projects/college-management/client/src/components/TeacherDashboard.js",[],"/home/shivendra/Documents/Projects/college-management/client/src/components/StudentSection.js",["87","88","89"],"import React from 'react';\nimport '../css/StudentSection.css'\nimport Axios from 'axios';\nimport URL from '../assets/url'\n\n\n\n\nclass StudentSection extends React.Component{\n    constructor(){\n        super();\n        this.state = {\n            assignments:[],\n            all_assignment:{},\n            current_student:'',\n            show:false,\n            grade:-1,\n            // students:this.props.students\n            \n            \n        }\n    }\n   \n\n    setCurrentStudent = (e) =>{\n\n        if(this.state.current_student)\n        document.getElementById(this.state.current_student).style.display = 'none'\n\n        this.setState({\n                current_student:e.target.value,\n                show:true\n            },()=>{\n                this.getAssignment();\n                if(this.state.show){\n\n                    document.getElementById(this.state.current_student).style.display = 'block'\n                }\n        \n            }\n        );\n        \n    }\n   \n\n    getAssignment = () =>{\n\n           //all submitted assignment and their grades\n           let assignments={};\n           let promise1 = this.props.assignments.forEach((assignment => {\n               let id = assignment._id;\n               // console.log('id:  ',id);\n   \n               let topic = assignment.topic;\n               let content = assignment.content\n               assignments[id] = { \n                   topic :topic,\n                   content:content,\n                   show:false //show property to only subbmitted assignment by student\n               }\n           }),\n           \n           \n           );\n          \n           //setting submitted assignment value to the assignment details\n\n           let submitted_assignment = []\n\n           \n           \n           let promise2 = this.props.students.forEach(student =>{\n               if(student._id==this.state.current_student){\n                   if(student.log.length>0){\n                       student.log.forEach( log => {\n                           //log.assignment is id of assignment submitted\n                           if(assignments.hasOwnProperty(log.assignment)){\n                               assignments[log.assignment]['grade']=log.grade;\n                               assignments[log.assignment].show = true;\n                               assignments[log.assignment].path = log.document\n                               assignments[log.assignment].id = log._id\n\n\n                               console.log(assignments[log.assignment]);\n\n                                //pushing submitted assignment ot submitted_assignment array\n                               submitted_assignment.push(assignments[log.assignment]);\n                           }\n                       });\n                   }\n               }\n           })\n\n           console.log('-----------------------hello-----------')\n           \n           Promise.all([promise1,promise2]).then(\n               this.setState({\n                   assignments:submitted_assignment,\n                   all_assignment:assignments\n               })\n            \n           );\n   \n   \n\n    }\n\n    getFile = (e) =>{\n\n        Axios({\n            method: \"GET\",\n            // url:`http://localhost:8000/teacher/get-file/?path=${e.target.value}`, \n          \n            // url:`https://college-management-portal-app.herokuapp.com/teacher/get-file/?path=${e.target.value}`, \n            url:URL+`teacher/get-file/?path=${e.target.value}`,\n\n            responseType: \"blob\",\n            //Force to receive data in a Blob Format\n            withCredentials:true\n          })\n            .then(response => {\n              //Build a URL from the file\n              var file = new Blob([response.data], {type: 'application/pdf'});\n              const fileURL = URL.createObjectURL(file);\n              //Open the URL on new Window\n              window.open(fileURL);\n            })\n            .catch(error => {\n              console.log(error);\n            });\n  \n  \n    }\n\n    setGrade = (e) =>{\n        e.preventDefault();\n        this.setState({\n            grade:e.target.value\n        })\n        \n    }\n\n    giveGrade = (e) =>{\n        if(this.state.grade!=-1){\n                \n            Axios({\n                method: \"POST\",\n                // url:`http://localhost:8000/teacher/give-grades/?id=${e.target.value}&&grade=${this.state.grade}`,\n                // url:`https://college-management-portal-app.herokuapp.com/teacher/give-grades/?id=${e.target.value}&&grade=${this.state.grade}`,\n                url:URL+`teacher/give-grades/?id=${e.target.value}&&grade=${this.state.grade}`,\n\n                data:{\n                    student:this.state.current_student,\n                    grade:this.state.grade\n                },\n\n                withCredentials:true,\n            }).then((res)=>{\n                console.log(res.data,'---red data');\n                this.setState({grade:-1}) //setting grade state to  default value after giving grades\n                this.props.updateStudent();\n                \n                \n            }).catch(err=>{console.log(err)});\n        }\n    }\n\n    componentDidUpdate(prevProps){\n        if(prevProps.students!=this.props.students){\n            this.getAssignment();\n        }\n    }\n\n\n    render(){\n        \n\n        let arr = [-1,0,1,2,3,4,5,6,7,8,9,10]\n        console.log(this.state.grade,'--grade')\n       \n        return(\n            <div className='student-section'>\n             \n                <h3>Student Section</h3>\n                {this.props.students.map((student,index)=>(<div key={index}>\n\n                    <button className=\"student-container\"  value={student._id} onClick={this.setCurrentStudent}>\n                        {student.name}\n                    </button>\n\n\n                    {/* this block will only be show for the current_student as it set by the clicked student name */}\n                    <div  className= \"submitted-assignment\" id={student._id} >  \n                       \n                        <div className=\"submitted-assignment-heading\" >{this.state.assignments.length?'Submitted Asigments':'No Submitted Asigments'}</div>\n                        \n                        {this.state.assignments.map((item,index)=>(<div className='assignment-detail' key={index}>\n                            <div className=\"student-assignment\" >\n                                \n                                    <div className='student-assignment-detail'>\n                                        <button className='show-attached-file' onClick={this.getFile} value={item.path}>Show Attached File</button>\n\n                                        <div className='student-assignment-topic'>\n                                            <span><b>{item.topic}: </b></span>\n                                            <span>{item.content}</span>\n                                        </div>\n\n                                    \n                                    </div>\n\n                                    <div className='assignment-detail-grade' >{item.grade===-1?   //check whether evaluated or not\n                                        <div className='evalute' id={'show-'+this.state.current_student}>\n                                            \n                                            <select onChange={this.setGrade}>\n                                                <option selected>-Grade-</option>\n                                                {arr.map((item,index)=>(<option>{item}</option>))}\n                                            </select>\n                                            <button value={item.id} onClick={this.giveGrade}> Evaluate </button> \n                                        </div>\n                                        :\n                                        <div className='score'>\n                                            {/* <h6>Score:</h6> */}\n                                            <h3>{item.grade}</h3>\n\n                                        </div>\n                                    }</div>\n\n                            </div>\n\n\n                              \n                                \n\n                               \n                        </div>))}\n                    </div>\n\n                </div>))}\n\n\n                \n\n              \n            </div>\n        );\n    }\n}\n\nexport default StudentSection;","/home/shivendra/Documents/Projects/college-management/client/src/assets/url.js",[],{"ruleId":"90","replacedBy":"91"},{"ruleId":"92","replacedBy":"93"},{"ruleId":"94","severity":1,"message":"95","line":9,"column":8,"nodeType":"96","messageId":"97","endLine":9,"endColumn":17},{"ruleId":"98","severity":1,"message":"99","line":48,"column":17,"nodeType":"100","endLine":48,"endColumn":45},{"ruleId":"101","severity":1,"message":"102","line":23,"column":26,"nodeType":"103","messageId":"104","endLine":23,"endColumn":28},{"ruleId":"101","severity":1,"message":"102","line":16,"column":36,"nodeType":"103","messageId":"104","endLine":16,"endColumn":38},{"ruleId":"101","severity":1,"message":"105","line":39,"column":54,"nodeType":"103","messageId":"104","endLine":39,"endColumn":56},{"ruleId":"101","severity":1,"message":"105","line":92,"column":108,"nodeType":"103","messageId":"104","endLine":92,"endColumn":110},{"ruleId":"101","severity":1,"message":"102","line":116,"column":59,"nodeType":"103","messageId":"104","endLine":116,"endColumn":61},{"ruleId":"101","severity":1,"message":"102","line":211,"column":117,"nodeType":"103","messageId":"104","endLine":211,"endColumn":119},{"ruleId":"101","severity":1,"message":"102","line":73,"column":30,"nodeType":"103","messageId":"104","endLine":73,"endColumn":32},{"ruleId":"101","severity":1,"message":"105","line":144,"column":28,"nodeType":"103","messageId":"104","endLine":144,"endColumn":30},{"ruleId":"101","severity":1,"message":"105","line":169,"column":30,"nodeType":"103","messageId":"104","endLine":169,"endColumn":32},"no-native-reassign",["106"],"no-negated-in-lhs",["107"],"no-unused-vars","'userEvent' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","no-global-assign","no-unsafe-negation"]